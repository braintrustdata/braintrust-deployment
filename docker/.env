# Environment variables for configuring runtime properties of the standalone
# deployment. This file should remain alongside the `docker-compose` file you
# use to launch braintrust.
#
# After changing any environment variables, make sure to restart the docker
# services for the changes to take effect.

# These variables are used by both deployments.

# Connection URI for the redis instance. The general form of the URI is
# `redis://[user[:password]@][host][:port][/db-number][?param1=value1&param2=value2...]`.
# Defaults to the URI for the `braintrust-redis` docker service.
REDIS_URL=redis://host.docker.internal:6479/0

# Connection URI for the postgres instance. The general form of the URI is
# `postgresql://[user[:password]@][host][:port][/dbname][?param1=value1&param2=value2...]`.
# Defaults to the URI for the 'braintrust-postgres' docker service.
#
# See
# https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING-URIS
# for full details on the URI spec.
PG_URL=postgres://postgres:postgres@host.docker.internal:5532/postgres 

# These variables are only used by the 'api' standalone deployment. They are
# not used by the 'full' standalone deployment.

# Port on which to run the API server. If you change this, you may want to set
# the port mapping in the docker-compose.api file for braintrust-standalone-api
# to '8000:[API_PORT]'.
API_PORT=8000

# These variables are only used by the 'full' standalone deployment. They are
# not used by the 'api' standalone deployment.

# The domain at which services can be accessed by the public (such as browsers).
#
# Note: In a full url [scheme]://[domain]:[port]/[extra], this should just
# include the [domain] part.
APP_PUBLIC_BASE_DOMAIN=localhost

# APP_BOOTSTRAP_CONTAINER_SERVER_SECRET only matters in "full configuration". In
# full config, the braintrust-standalone-app-bootstrap container allows you to
# issue api keys to new users (as a way to bootstrap access). You can lock down
# that webserver so that only admins can access it. For example, you do not need
# to expose that container's port externally.
# APP_BOOTSTRAP_CONTAINER_SERVER_SECRET is a password that you can use as an
# additional layer of protection for that web server.
# 
# APP_BOOTSTRAP_CONTAINER_SERVER_SECRET's value must be included in the HTTP
# request as a header 'Authorization: Bearer [secret]'.
APP_BOOTSTRAP_CONTAINER_SERVER_SECRET=my-secure-secret-token
